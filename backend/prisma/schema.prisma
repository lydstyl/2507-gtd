generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tags      Tag[]
  tasks     Task[]

  @@map("users")
}

model Task {
  id          String    @id @default(cuid())
  name        String
  link        String?
  note        String?
  importance  Int       @default(50)
  complexity  Int       @default(1)
  points      Int       @default(500)
  plannedDate DateTime?
  dueDate     DateTime?
  isCompleted Boolean   @default(false)
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  parentId    String?
  tags        TaskTag[]
  parent      Task?     @relation("TaskSubtasks", fields: [parentId], references: [id], onDelete: Cascade)
  subtasks    Task[]    @relation("TaskSubtasks")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("tasks")
}

model Tag {
  id        String    @id @default(cuid())
  name      String
  color     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks     TaskTag[]

  @@unique([name, userId])
  @@map("tags")
}

model TaskTag {
  id     String @id @default(cuid())
  taskId String
  tagId  String
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)

  @@unique([taskId, tagId])
  @@map("task_tags")
}
